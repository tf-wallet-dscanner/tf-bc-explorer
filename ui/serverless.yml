service: bc-explorer-ui

provider:
  name: aws
  runtime: nodejs16.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: sls-bc-explorer-ui-${self:provider.stage}-${self:provider.region}

plugins:
  - serverless-s3-sync
  - serverless-stack-termination-protection

custom:
  serverlessTerminationProtection:
    stages:
      - prod
  domainNames:
    dev: dev.dscanner.io
    prod: v2.dscanner.io
  domainName: ${self:custom.domainNames.${self:provider.stage}}
  bucketName: ${self:custom.domainName}
  s3Sync:
    - bucketName: ${self:custom.bucketName}
      localDir: build
      params:
        - index.html:
            CacheControl: 'no-cache, max-age=30'

resources:
  Resources:
    WebAppCloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: ${self:service}-${self:provider.stage}

    WebAppBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: ${self:custom.bucketName}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

    WebAppBucketPolicy:
      Type: AWS::S3::BucketPolicy
      DependsOn:
        - WebAppCloudFrontOriginAccessIdentity
      Properties:
        Bucket:
          Ref: WebAppBucket
        PolicyDocument:
          Statement:
            - Sid: CanonicalUserReadGetObject
              Effect: Allow
              Principal:
                CanonicalUser:
                  Fn::GetAtt:
                    [WebAppCloudFrontOriginAccessIdentity, S3CanonicalUserId]
              Action:
                - s3:GetObject
              Resource:
                Fn::Join:
                  - ''
                  - - 'arn:aws:s3:::'
                    - Ref: WebAppBucket
                    - '/*'

    WebAppCloudFrontCachePolicy:
      Type: AWS::CloudFront::CachePolicy
      Properties:
        CachePolicyConfig:
          MinTTL: 1
          MaxTTL: 31536000
          DefaultTTL: 86400
          Name: CachingOptimized-${self:provider.stage}-${self:service}
          ParametersInCacheKeyAndForwardedToOrigin:
            CookiesConfig:
              CookieBehavior: none
            EnableAcceptEncodingBrotli: true
            EnableAcceptEncodingGzip: true
            HeadersConfig:
              HeaderBehavior: none
            QueryStringsConfig:
              QueryStringBehavior: none

    WebAppCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      DependsOn: WebAppBucketPolicy
      Properties:
        DistributionConfig:
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods:
              - GET
              - HEAD
            Compress: true
            TargetOriginId: ${self:service}
            CachePolicyId:
              Ref: WebAppCloudFrontCachePolicy
            ViewerProtocolPolicy: redirect-to-https
          ViewerCertificate:
            AcmCertificateArn: ${ssm:/${self:provider.stage}/${self:service}/acm_certificate_arn}
            SslSupportMethod: sni-only
          DefaultRootObject: index.html
          Aliases:
            - ${self:custom.domainName}
          Enabled: true
          HttpVersion: http2
          Logging:
            IncludeCookies: false
            Bucket: ${self:custom.bucketName}.s3.amazonaws.com
            Prefix: cf-logs
          Origins:
            - DomainName: ${self:custom.bucketName}.s3.amazonaws.com
              Id: ${self:service}
              OriginShield:
                Enabled: true
                OriginShieldRegion: ap-northeast-2
              S3OriginConfig:
                OriginAccessIdentity:
                  Fn::Join:
                    - ''
                    - - 'origin-access-identity/cloudfront/'
                      - Ref: WebAppCloudFrontOriginAccessIdentity

  Outputs:
    WebAppBucket:
      Value:
        Ref: WebAppBucket
    WebAppCloudFrontDistributionDomainName:
      Value:
        Fn::GetAtt: [WebAppCloudFrontDistribution, DomainName]
